Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.17/x64/lib/python3.9/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#import santa
import copy

def board_full(board):
    for i in range(len(board)):
        for j in range(len(board[i])):
            if board[i][j] == " ":
                return False
    return True
    
    
def invert_board(board):
    new_board = copy.deepcopy(board)
    for i in range(len(board)):
        for j in range(len(board[i])):
            if board[i][j] == "X":
                new_board[i][j] == "O"
            elif board[i][j] == "O":
                new_board[i][j] == "X"
    return new_board
    
def o_will_lose(board):
    if santa.x_won(board):
        return True

    if santa.x_won(invert_board(board)):
        return False
        
    
    if board_full(board):
        return False
    
    for i in range(len(board)):
        for j in range(len(board[i])):
            if board[i][j] == " ":
                board[i][j] = "O"
                if not x_will_win(board):
                    return False
                board[i][j] = " "                 
    return True

    
def x_will_win(board):
    if santa.x_won(board):
        return True
        
    if santa.x_won(invert_board(board)):
        return False
    
    if board_full(board):
        return False

    for i in range(len(board)):
        for j in range(len(board[i])):
            if board[i][j] == " ":
                board[i][j] = "X"
                if o_will_lose(board):
                   return True
                board[i][j] = " "
    return False
    
                
print(x_will_win([[" ", "X", " "], 
                  [" ", "X", " "],
                  [" ", "O ","O"]]))
                
print(x_will_win([[" ", " ", " "], 
                  [" ", "X", "O"],
                  [" ", " ", " "]]))
                
        
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[1], line 63[0m
[1;32m     59[0m                 board[i][j] [38;5;241m=[39m [38;5;124m"[39m[38;5;124m [39m[38;5;124m"[39m
[1;32m     60[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mFalse[39;00m
[0;32m---> 63[0m [38;5;28mprint[39m([43mx_will_win[49m[43m([49m[43m[[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43m [39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mX[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43m [39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m[43m [49m
[1;32m     64[0m [43m                  [49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43m [39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mX[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43m [39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m     65[0m [43m                  [49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43m [39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mO [39;49m[38;5;124;43m"[39;49m[43m,[49m[38;5;124;43m"[39;49m[38;5;124;43mO[39;49m[38;5;124;43m"[39;49m[43m][49m[43m][49m[43m)[49m)
[1;32m     67[0m [38;5;28mprint[39m(x_will_win([[[38;5;124m"[39m[38;5;124m [39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m [39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m [39m[38;5;124m"[39m], 
[1;32m     68[0m                   [[38;5;124m"[39m[38;5;124m [39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mX[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mO[39m[38;5;124m"[39m],
[1;32m     69[0m                   [[38;5;124m"[39m[38;5;124m [39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m [39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m [39m[38;5;124m"[39m]]))

Cell [0;32mIn[1], line 44[0m, in [0;36mx_will_win[0;34m(board)[0m
[1;32m     43[0m [38;5;28;01mdef[39;00m [38;5;21mx_will_win[39m(board):
[0;32m---> 44[0m     [38;5;28;01mif[39;00m [43msanta[49m[38;5;241m.[39mx_won(board):
[1;32m     45[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mTrue[39;00m
[1;32m     47[0m     [38;5;28;01mif[39;00m santa[38;5;241m.[39mx_won(invert_board(board)):

[0;31mNameError[0m: name 'santa' is not defined

